<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="10" total="156" passed="146" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-04-27T16:41:00 EDT" name="CORE Web Services - Continuous Integration" finished-at="2020-04-27T16:42:06 EDT" duration-ms="66542">
    <groups>
    </groups>
    <test started-at="2020-04-27T16:41:00 EDT" name="Full Suite" finished-at="2020-04-27T16:42:06 EDT" duration-ms="66542">
      <class name="customerAccounting.GetLastPaymentDateForCustomer">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerAccounting.GetLastPaymentDateForCustomer@4f2b503c]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getCustomerAccountValue()[pri:0, instance:customerAccounting.GetLastPaymentDateForCustomer@4f2b503c]" started-at="2020-04-27T16:41:33 EDT" name="getCustomerAccountValue" finished-at="2020-04-27T16:41:33 EDT" duration-ms="175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCustomerAccountValue -->
      </class> <!-- customerAccounting.GetLastPaymentDateForCustomer -->
      <class name="corporateInfo.GetGoogleAnalyticsId">
        <test-method is-config="true" signature="getData()[pri:0, instance:corporateInfo.GetGoogleAnalyticsId@21e360a]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getGoogleAnalyticsId()[pri:0, instance:corporateInfo.GetGoogleAnalyticsId@21e360a]" started-at="2020-04-27T16:41:28 EDT" name="getGoogleAnalyticsId" finished-at="2020-04-27T16:41:28 EDT" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGoogleAnalyticsId -->
      </class> <!-- corporateInfo.GetGoogleAnalyticsId -->
      <class name="customerAccounting.GetPastDueBalancesByCustomer">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerAccounting.GetPastDueBalancesByCustomer@209da20d]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getPastDueBalancesAllDates()[pri:0, instance:customerAccounting.GetPastDueBalancesByCustomer@209da20d]" started-at="2020-04-27T16:41:34 EDT" name="getPastDueBalancesAllDates" finished-at="2020-04-27T16:41:35 EDT" duration-ms="404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPastDueBalancesAllDates -->
        <test-method signature="getPastDueBalancesByCustomer()[pri:0, instance:customerAccounting.GetPastDueBalancesByCustomer@209da20d]" started-at="2020-04-27T16:41:35 EDT" name="getPastDueBalancesByCustomer" finished-at="2020-04-27T16:41:35 EDT" duration-ms="391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPastDueBalancesByCustomer -->
        <test-method signature="getPastDueBalancesByCustomers()[pri:0, instance:customerAccounting.GetPastDueBalancesByCustomer@209da20d]" started-at="2020-04-27T16:41:35 EDT" name="getPastDueBalancesByCustomers" finished-at="2020-04-27T16:41:36 EDT" duration-ms="579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPastDueBalancesByCustomers -->
        <test-method signature="noPastDueBalancesFound()[pri:0, instance:customerAccounting.GetPastDueBalancesByCustomer@209da20d]" started-at="2020-04-27T16:41:36 EDT" name="noPastDueBalancesFound" finished-at="2020-04-27T16:41:36 EDT" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noPastDueBalancesFound -->
      </class> <!-- customerAccounting.GetPastDueBalancesByCustomer -->
      <class name="messagingService.SendCustomerCourseEnrollmentConfirmationEmailTest">
        <test-method is-config="true" signature="getData()[pri:0, instance:messagingService.SendCustomerCourseEnrollmentConfirmationEmailTest@7c711375]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="SendCustomerCourseEnrollmentConfirmationEmail()[pri:1, instance:messagingService.SendCustomerCourseEnrollmentConfirmationEmailTest@7c711375]" started-at="2020-04-27T16:41:50 EDT" name="SendCustomerCourseEnrollmentConfirmationEmail" finished-at="2020-04-27T16:41:50 EDT" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendCustomerCourseEnrollmentConfirmationEmail -->
        <test-method signature="InvalidEnrollmentId()[pri:2, instance:messagingService.SendCustomerCourseEnrollmentConfirmationEmailTest@7c711375]" started-at="2020-04-27T16:41:50 EDT" name="InvalidEnrollmentId" finished-at="2020-04-27T16:41:50 EDT" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidEnrollmentId -->
      </class> <!-- messagingService.SendCustomerCourseEnrollmentConfirmationEmailTest -->
      <class name="resources._preTestAnnouncement">
        <test-method is-config="true" signature="getPreTestAnnouncement()[pri:0, instance:resources._preTestAnnouncement@4738a206]" started-at="2020-04-27T16:41:00 EDT" name="getPreTestAnnouncement" finished-at="2020-04-27T16:41:00 EDT" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPreTestAnnouncement -->
      </class> <!-- resources._preTestAnnouncement -->
      <class name="customerAccounting.GetInvoiceChargeReceiptDetail">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerAccounting.GetInvoiceChargeReceiptDetail@52af26ee]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getInvoiceChargeReceiptDetail()[pri:0, instance:customerAccounting.GetInvoiceChargeReceiptDetail@52af26ee]" started-at="2020-04-27T16:41:33 EDT" name="getInvoiceChargeReceiptDetail" finished-at="2020-04-27T16:41:33 EDT" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInvoiceChargeReceiptDetail -->
      </class> <!-- customerAccounting.GetInvoiceChargeReceiptDetail -->
      <class name="corporateInfo.GetBrandingLogo">
        <test-method is-config="true" signature="getData()[pri:0, instance:corporateInfo.GetBrandingLogo@4fb3ee4e]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getEMEBrandingLogo()[pri:0, instance:corporateInfo.GetBrandingLogo@4fb3ee4e]" started-at="2020-04-27T16:41:24 EDT" name="getEMEBrandingLogo" finished-at="2020-04-27T16:41:25 EDT" duration-ms="297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEMEBrandingLogo -->
        <test-method signature="getJOLBrandingLogo()[pri:0, instance:corporateInfo.GetBrandingLogo@4fb3ee4e]" started-at="2020-04-27T16:41:25 EDT" name="getJOLBrandingLogo" finished-at="2020-04-27T16:41:25 EDT" duration-ms="465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getJOLBrandingLogo -->
      </class> <!-- corporateInfo.GetBrandingLogo -->
      <class name="changeRequests.GetStoredPaymentAccounts">
        <test-method is-config="true" signature="getData()[pri:0, instance:changeRequests.GetStoredPaymentAccounts@1af2d44a]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="checkingAccountNoAgreement()[pri:0, instance:changeRequests.GetStoredPaymentAccounts@1af2d44a]" started-at="2020-04-27T16:41:05 EDT" name="checkingAccountNoAgreement" finished-at="2020-04-27T16:41:06 EDT" duration-ms="720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingAccountNoAgreement -->
        <test-method signature="multipleAgreementsMultipleCreditCards()[pri:0, instance:changeRequests.GetStoredPaymentAccounts@1af2d44a]" started-at="2020-04-27T16:41:06 EDT" name="multipleAgreementsMultipleCreditCards" finished-at="2020-04-27T16:41:08 EDT" duration-ms="2061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleAgreementsMultipleCreditCards -->
        <test-method signature="multipleAgreementsSingleCard()[pri:0, instance:changeRequests.GetStoredPaymentAccounts@1af2d44a]" started-at="2020-04-27T16:41:08 EDT" name="multipleAgreementsSingleCard" finished-at="2020-04-27T16:41:09 EDT" duration-ms="1078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleAgreementsSingleCard -->
      </class> <!-- changeRequests.GetStoredPaymentAccounts -->
      <class name="corporateInfo.GetClubAcceptedCreditCards">
        <test-method is-config="true" signature="getData()[pri:0, instance:corporateInfo.GetClubAcceptedCreditCards@25fb8912]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getCards()[pri:0, instance:corporateInfo.GetClubAcceptedCreditCards@25fb8912]" started-at="2020-04-27T16:41:26 EDT" name="getCards" finished-at="2020-04-27T16:41:26 EDT" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCards -->
      </class> <!-- corporateInfo.GetClubAcceptedCreditCards -->
      <class name="customerInfo.GetFamilyMembersForTest">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerInfo.GetFamilyMembersForTest@43dac38f]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="familyMemberFound()[pri:0, instance:customerInfo.GetFamilyMembersForTest@43dac38f]" started-at="2020-04-27T16:41:41 EDT" name="familyMemberFound" finished-at="2020-04-27T16:41:41 EDT" duration-ms="388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- familyMemberFound -->
        <test-method signature="familyMemberNotFound()[pri:0, instance:customerInfo.GetFamilyMembersForTest@43dac38f]" started-at="2020-04-27T16:41:41 EDT" name="familyMemberNotFound" finished-at="2020-04-27T16:41:41 EDT" duration-ms="174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- familyMemberNotFound -->
      </class> <!-- customerInfo.GetFamilyMembersForTest -->
      <class name="customerAccounting.GetCustomerCurrentBalance">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerAccounting.GetCustomerCurrentBalance@306e95ec]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getCustomerCurrentBalance()[pri:0, instance:customerAccounting.GetCustomerCurrentBalance@306e95ec]" started-at="2020-04-27T16:41:32 EDT" name="getCustomerCurrentBalance" finished-at="2020-04-27T16:41:33 EDT" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCustomerCurrentBalance -->
      </class> <!-- customerAccounting.GetCustomerCurrentBalance -->
      <class name="customerInfo.SearchMembers">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerInfo.SearchMembers@485966cc]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="membersFound()[pri:0, instance:customerInfo.SearchMembers@485966cc]" started-at="2020-04-27T16:41:45 EDT" name="membersFound" finished-at="2020-04-27T16:41:46 EDT" duration-ms="579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- membersFound -->
        <test-method signature="membersNotFound()[pri:0, instance:customerInfo.SearchMembers@485966cc]" started-at="2020-04-27T16:41:46 EDT" name="membersNotFound" finished-at="2020-04-27T16:41:46 EDT" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- membersNotFound -->
      </class> <!-- customerInfo.SearchMembers -->
      <class name="customerInfo.GetFullFamilyForTest">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerInfo.GetFullFamilyForTest@342c38f8]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="familyFound()[pri:0, instance:customerInfo.GetFullFamilyForTest@342c38f8]" started-at="2020-04-27T16:41:41 EDT" name="familyFound" finished-at="2020-04-27T16:41:42 EDT" duration-ms="529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- familyFound -->
        <test-method signature="familyMemberNotFound()[pri:0, instance:customerInfo.GetFullFamilyForTest@342c38f8]" started-at="2020-04-27T16:41:42 EDT" name="familyMemberNotFound" finished-at="2020-04-27T16:41:42 EDT" duration-ms="187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- familyMemberNotFound -->
      </class> <!-- customerInfo.GetFullFamilyForTest -->
      <class name="corporateInfo.GetActiveClubs">
        <test-method is-config="true" signature="getData()[pri:0, instance:corporateInfo.GetActiveClubs@543588e6]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getActiveClubs()[pri:0, instance:corporateInfo.GetActiveClubs@543588e6]" started-at="2020-04-27T16:41:23 EDT" name="getActiveClubs" finished-at="2020-04-27T16:41:23 EDT" duration-ms="391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActiveClubs -->
      </class> <!-- corporateInfo.GetActiveClubs -->
      <class name="changeRequests.GetPersonalInformation">
        <test-method is-config="true" signature="getData()[pri:0, instance:changeRequests.GetPersonalInformation@1e04fa0a]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getPersonalInformation()[pri:0, instance:changeRequests.GetPersonalInformation@1e04fa0a]" started-at="2020-04-27T16:41:04 EDT" name="getPersonalInformation" finished-at="2020-04-27T16:41:05 EDT" duration-ms="1580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPersonalInformation -->
      </class> <!-- changeRequests.GetPersonalInformation -->
      <class name="corporateInfo.CompanyHasModuleGrant">
        <test-method is-config="true" signature="getData()[pri:0, instance:corporateInfo.CompanyHasModuleGrant@58695725]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="companyHasModuleGrant()[pri:0, instance:corporateInfo.CompanyHasModuleGrant@58695725]" started-at="2020-04-27T16:41:23 EDT" name="companyHasModuleGrant" finished-at="2020-04-27T16:41:23 EDT" duration-ms="235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- companyHasModuleGrant -->
      </class> <!-- corporateInfo.CompanyHasModuleGrant -->
      <class name="customerAccounting.GetStoredPaymentAccountsForCustomer">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerAccounting.GetStoredPaymentAccountsForCustomer@6392827e]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="checkingAccountFound()[pri:0, instance:customerAccounting.GetStoredPaymentAccountsForCustomer@6392827e]" started-at="2020-04-27T16:41:36 EDT" name="checkingAccountFound" finished-at="2020-04-27T16:41:36 EDT" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingAccountFound -->
        <test-method signature="creditCardFound()[pri:0, instance:customerAccounting.GetStoredPaymentAccountsForCustomer@6392827e]" started-at="2020-04-27T16:41:36 EDT" name="creditCardFound" finished-at="2020-04-27T16:41:37 EDT" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCardFound -->
        <test-method signature="multipleCreditCardsFound()[pri:0, instance:customerAccounting.GetStoredPaymentAccountsForCustomer@6392827e]" started-at="2020-04-27T16:41:37 EDT" name="multipleCreditCardsFound" finished-at="2020-04-27T16:41:37 EDT" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleCreditCardsFound -->
        <test-method signature="noFormOfPayment()[pri:0, instance:customerAccounting.GetStoredPaymentAccountsForCustomer@6392827e]" started-at="2020-04-27T16:41:37 EDT" name="noFormOfPayment" finished-at="2020-04-27T16:41:37 EDT" duration-ms="174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noFormOfPayment -->
      </class> <!-- customerAccounting.GetStoredPaymentAccountsForCustomer -->
      <class name="customerInfo.UpdateHeadOfHousehold">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerInfo.UpdateHeadOfHousehold@54bff557]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="headOfHouseholdUpdated1()[pri:1, instance:customerInfo.UpdateHeadOfHousehold@54bff557]" started-at="2020-04-27T16:41:47 EDT" name="headOfHouseholdUpdated1" finished-at="2020-04-27T16:41:48 EDT" duration-ms="373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- headOfHouseholdUpdated1 -->
        <test-method signature="headOfHouseholdUpdated2()[pri:2, instance:customerInfo.UpdateHeadOfHousehold@54bff557]" started-at="2020-04-27T16:41:48 EDT" name="headOfHouseholdUpdated2" finished-at="2020-04-27T16:41:48 EDT" duration-ms="344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- headOfHouseholdUpdated2 -->
        <test-method signature="headOfHouseholdNotUpdated()[pri:3, instance:customerInfo.UpdateHeadOfHousehold@54bff557]" started-at="2020-04-27T16:41:48 EDT" name="headOfHouseholdNotUpdated" finished-at="2020-04-27T16:41:48 EDT" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- headOfHouseholdNotUpdated -->
      </class> <!-- customerInfo.UpdateHeadOfHousehold -->
      <class name="customerAccounting.GetPaymentReceiptDetail">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerAccounting.GetPaymentReceiptDetail@e15b7e8]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getPaymentReceiptDetail()[pri:0, instance:customerAccounting.GetPaymentReceiptDetail@e15b7e8]" started-at="2020-04-27T16:41:36 EDT" name="getPaymentReceiptDetail" finished-at="2020-04-27T16:41:36 EDT" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPaymentReceiptDetail -->
      </class> <!-- customerAccounting.GetPaymentReceiptDetail -->
      <class name="customerAccounting.GetPaymentReceiptDetailForReceiptNumber">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerAccounting.GetPaymentReceiptDetailForReceiptNumber@1b2abca6]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getPaymentReceiptDetailForReceiptNumber()[pri:0, instance:customerAccounting.GetPaymentReceiptDetailForReceiptNumber@1b2abca6]" started-at="2020-04-27T16:41:36 EDT" name="getPaymentReceiptDetailForReceiptNumber" finished-at="2020-04-27T16:41:36 EDT" duration-ms="174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPaymentReceiptDetailForReceiptNumber -->
      </class> <!-- customerAccounting.GetPaymentReceiptDetailForReceiptNumber -->
      <class name="corporateInfo.GetBranding">
        <test-method is-config="true" signature="getData()[pri:0, instance:corporateInfo.GetBranding@f5acb9d]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getEMEBranding()[pri:0, instance:corporateInfo.GetBranding@f5acb9d]" started-at="2020-04-27T16:41:23 EDT" name="getEMEBranding" finished-at="2020-04-27T16:41:24 EDT" duration-ms="609" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEMEBranding -->
        <test-method signature="getJOLBranding()[pri:0, instance:corporateInfo.GetBranding@f5acb9d]" started-at="2020-04-27T16:41:24 EDT" name="getJOLBranding" finished-at="2020-04-27T16:41:24 EDT" duration-ms="565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getJOLBranding -->
      </class> <!-- corporateInfo.GetBranding -->
      <class name="changeRequests.GetSubmissionReasonsForSubmission">
        <test-method is-config="true" signature="getData()[pri:0, instance:changeRequests.GetSubmissionReasonsForSubmission@18d87d80]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getSubmissionReasonsForSubmissionNohClub()[pri:0, instance:changeRequests.GetSubmissionReasonsForSubmission@18d87d80]" started-at="2020-04-27T16:41:09 EDT" name="getSubmissionReasonsForSubmissionNohClub" finished-at="2020-04-27T16:41:09 EDT" duration-ms="267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSubmissionReasonsForSubmissionNohClub -->
        <test-method signature="getSubmissionReasonsForSubmissionWithClub()[pri:0, instance:changeRequests.GetSubmissionReasonsForSubmission@18d87d80]" started-at="2020-04-27T16:41:09 EDT" name="getSubmissionReasonsForSubmissionWithClub" finished-at="2020-04-27T16:41:10 EDT" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSubmissionReasonsForSubmissionWithClub -->
      </class> <!-- changeRequests.GetSubmissionReasonsForSubmission -->
      <class name="messagingService.SendFamilyClassEnrollmentConfirmationEmailTest">
        <test-method is-config="true" signature="getData()[pri:0, instance:messagingService.SendFamilyClassEnrollmentConfirmationEmailTest@57cf54e1]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="SendFamilyClassEnrollmentConfirmationEmail()[pri:1, instance:messagingService.SendFamilyClassEnrollmentConfirmationEmailTest@57cf54e1]" started-at="2020-04-27T16:41:50 EDT" name="SendFamilyClassEnrollmentConfirmationEmail" finished-at="2020-04-27T16:41:50 EDT" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendFamilyClassEnrollmentConfirmationEmail -->
        <test-method signature="SendFamilyClassEnrollmentOnlyConfirmationEmail()[pri:2, instance:messagingService.SendFamilyClassEnrollmentConfirmationEmailTest@57cf54e1]" started-at="2020-04-27T16:41:50 EDT" name="SendFamilyClassEnrollmentOnlyConfirmationEmail" finished-at="2020-04-27T16:41:50 EDT" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendFamilyClassEnrollmentOnlyConfirmationEmail -->
        <test-method signature="SendFamilyClassStandbyOnlyConfirmationEmail()[pri:3, instance:messagingService.SendFamilyClassEnrollmentConfirmationEmailTest@57cf54e1]" started-at="2020-04-27T16:41:50 EDT" name="SendFamilyClassStandbyOnlyConfirmationEmail" finished-at="2020-04-27T16:41:51 EDT" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendFamilyClassStandbyOnlyConfirmationEmail -->
        <test-method signature="SendFamilyClassEnrollmentAndStandbyNoHohConfirmationEmail()[pri:4, instance:messagingService.SendFamilyClassEnrollmentConfirmationEmailTest@57cf54e1]" started-at="2020-04-27T16:41:51 EDT" name="SendFamilyClassEnrollmentAndStandbyNoHohConfirmationEmail" finished-at="2020-04-27T16:41:51 EDT" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendFamilyClassEnrollmentAndStandbyNoHohConfirmationEmail -->
        <test-method signature="InvalidCustomerId()[pri:5, instance:messagingService.SendFamilyClassEnrollmentConfirmationEmailTest@57cf54e1]" started-at="2020-04-27T16:41:51 EDT" name="InvalidCustomerId" finished-at="2020-04-27T16:41:51 EDT" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidCustomerId -->
        <test-method signature="InvalidEnrollmentId()[pri:6, instance:messagingService.SendFamilyClassEnrollmentConfirmationEmailTest@57cf54e1]" started-at="2020-04-27T16:41:51 EDT" name="InvalidEnrollmentId" finished-at="2020-04-27T16:41:51 EDT" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidEnrollmentId -->
      </class> <!-- messagingService.SendFamilyClassEnrollmentConfirmationEmailTest -->
      <class name="messagingService.SendFamilyCourseEnrollmentConfirmationEmailTest">
        <test-method is-config="true" signature="getData()[pri:0, instance:messagingService.SendFamilyCourseEnrollmentConfirmationEmailTest@5b03b9fe]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="SendFamilyCourseEnrollmentConfirmationEmail()[pri:1, instance:messagingService.SendFamilyCourseEnrollmentConfirmationEmailTest@5b03b9fe]" started-at="2020-04-27T16:41:51 EDT" name="SendFamilyCourseEnrollmentConfirmationEmail" finished-at="2020-04-27T16:41:52 EDT" duration-ms="220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendFamilyCourseEnrollmentConfirmationEmail -->
        <test-method signature="SendFamilyCourseEnrollmentOnlyConfirmationEmail()[pri:2, instance:messagingService.SendFamilyCourseEnrollmentConfirmationEmailTest@5b03b9fe]" started-at="2020-04-27T16:41:52 EDT" name="SendFamilyCourseEnrollmentOnlyConfirmationEmail" finished-at="2020-04-27T16:41:52 EDT" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendFamilyCourseEnrollmentOnlyConfirmationEmail -->
        <test-method signature="SendFamilyCourseStandbyOnlyConfirmationEmail()[pri:3, instance:messagingService.SendFamilyCourseEnrollmentConfirmationEmailTest@5b03b9fe]" started-at="2020-04-27T16:41:52 EDT" name="SendFamilyCourseStandbyOnlyConfirmationEmail" finished-at="2020-04-27T16:41:52 EDT" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendFamilyCourseStandbyOnlyConfirmationEmail -->
        <test-method signature="SendFamilyCourseEnrollmentAndStandbyNoHohConfirmationEmail()[pri:4, instance:messagingService.SendFamilyCourseEnrollmentConfirmationEmailTest@5b03b9fe]" started-at="2020-04-27T16:41:52 EDT" name="SendFamilyCourseEnrollmentAndStandbyNoHohConfirmationEmail" finished-at="2020-04-27T16:41:52 EDT" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendFamilyCourseEnrollmentAndStandbyNoHohConfirmationEmail -->
        <test-method signature="InvalidCustomerId()[pri:5, instance:messagingService.SendFamilyCourseEnrollmentConfirmationEmailTest@5b03b9fe]" started-at="2020-04-27T16:41:52 EDT" name="InvalidCustomerId" finished-at="2020-04-27T16:41:52 EDT" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidCustomerId -->
        <test-method signature="InvalidEnrollmentId()[pri:6, instance:messagingService.SendFamilyCourseEnrollmentConfirmationEmailTest@5b03b9fe]" started-at="2020-04-27T16:41:52 EDT" name="InvalidEnrollmentId" finished-at="2020-04-27T16:41:53 EDT" duration-ms="218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidEnrollmentId -->
      </class> <!-- messagingService.SendFamilyCourseEnrollmentConfirmationEmailTest -->
      <class name="agreementInfo.GetCustomerRelatedAgreements">
        <test-method is-config="true" signature="getData()[pri:0, instance:agreementInfo.GetCustomerRelatedAgreements@66d3eec0]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="singleAgreementFound()[pri:0, instance:agreementInfo.GetCustomerRelatedAgreements@66d3eec0]" started-at="2020-04-27T16:41:01 EDT" name="singleAgreementFound" finished-at="2020-04-27T16:41:04 EDT" duration-ms="2828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleAgreementFound -->
      </class> <!-- agreementInfo.GetCustomerRelatedAgreements -->
      <class name="packageService.GetPackageDetails">
        <test-method is-config="true" signature="getData()[pri:0, instance:packageService.GetPackageDetails@434a63ab]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="serviceFoundRestrictFalse()[pri:0, instance:packageService.GetPackageDetails@434a63ab]" started-at="2020-04-27T16:41:53 EDT" name="serviceFoundRestrictFalse" finished-at="2020-04-27T16:41:54 EDT" duration-ms="592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- serviceFoundRestrictFalse -->
        <test-method signature="serviceFoundRestrictTrue()[pri:0, instance:packageService.GetPackageDetails@434a63ab]" started-at="2020-04-27T16:41:54 EDT" name="serviceFoundRestrictTrue" finished-at="2020-04-27T16:41:55 EDT" duration-ms="623" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- serviceFoundRestrictTrue -->
        <test-method signature="serviceNotFoundInactiveRestrictFalse()[pri:0, instance:packageService.GetPackageDetails@434a63ab]" started-at="2020-04-27T16:41:55 EDT" name="serviceNotFoundInactiveRestrictFalse" finished-at="2020-04-27T16:41:55 EDT" duration-ms="438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- serviceNotFoundInactiveRestrictFalse -->
        <test-method signature="serviceNotFoundInactiveRestrictTrue()[pri:0, instance:packageService.GetPackageDetails@434a63ab]" started-at="2020-04-27T16:41:55 EDT" name="serviceNotFoundInactiveRestrictTrue" finished-at="2020-04-27T16:41:55 EDT" duration-ms="157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- serviceNotFoundInactiveRestrictTrue -->
        <test-method signature="serviceNotFoundNotAllowedOnlineRestrictFalse()[pri:0, instance:packageService.GetPackageDetails@434a63ab]" started-at="2020-04-27T16:41:55 EDT" name="serviceNotFoundNotAllowedOnlineRestrictFalse" finished-at="2020-04-27T16:41:56 EDT" duration-ms="328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- serviceNotFoundNotAllowedOnlineRestrictFalse -->
        <test-method signature="serviceNotFoundNotAllowedOnlineRestrictTrue()[pri:0, instance:packageService.GetPackageDetails@434a63ab]" started-at="2020-04-27T16:41:56 EDT" name="serviceNotFoundNotAllowedOnlineRestrictTrue" finished-at="2020-04-27T16:41:56 EDT" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- serviceNotFoundNotAllowedOnlineRestrictTrue -->
        <test-method signature="trainingFoundInactiveRestrictFalse()[pri:0, instance:packageService.GetPackageDetails@434a63ab]" started-at="2020-04-27T16:41:56 EDT" name="trainingFoundInactiveRestrictFalse" finished-at="2020-04-27T16:41:56 EDT" duration-ms="469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trainingFoundInactiveRestrictFalse -->
        <test-method signature="trainingFoundNotAllowedOnlineRestrictFalse()[pri:0, instance:packageService.GetPackageDetails@434a63ab]" started-at="2020-04-27T16:41:56 EDT" name="trainingFoundNotAllowedOnlineRestrictFalse" finished-at="2020-04-27T16:41:57 EDT" duration-ms="486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trainingFoundNotAllowedOnlineRestrictFalse -->
        <test-method signature="trainingFoundRestrictFalse()[pri:0, instance:packageService.GetPackageDetails@434a63ab]" started-at="2020-04-27T16:41:57 EDT" name="trainingFoundRestrictFalse" finished-at="2020-04-27T16:41:57 EDT" duration-ms="453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trainingFoundRestrictFalse -->
        <test-method signature="trainingFoundRestrictTrue()[pri:0, instance:packageService.GetPackageDetails@434a63ab]" started-at="2020-04-27T16:41:57 EDT" name="trainingFoundRestrictTrue" finished-at="2020-04-27T16:41:58 EDT" duration-ms="484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trainingFoundRestrictTrue -->
        <test-method signature="trainingNotFoundInactiveRestrictTrue()[pri:0, instance:packageService.GetPackageDetails@434a63ab]" started-at="2020-04-27T16:41:58 EDT" name="trainingNotFoundInactiveRestrictTrue" finished-at="2020-04-27T16:41:58 EDT" duration-ms="157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trainingNotFoundInactiveRestrictTrue -->
        <test-method signature="trainingNotFoundNotAllowedOnlineRestrictTrue()[pri:0, instance:packageService.GetPackageDetails@434a63ab]" started-at="2020-04-27T16:41:58 EDT" name="trainingNotFoundNotAllowedOnlineRestrictTrue" finished-at="2020-04-27T16:41:58 EDT" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trainingNotFoundNotAllowedOnlineRestrictTrue -->
      </class> <!-- packageService.GetPackageDetails -->
      <class name="packageService.GetAvailablePackagesByClub">
        <test-method is-config="true" signature="getData()[pri:0, instance:packageService.GetAvailablePackagesByClub@6e0f5f7f]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="customerNotFound()[pri:0, instance:packageService.GetAvailablePackagesByClub@6e0f5f7f]" started-at="2020-04-27T16:41:58 EDT" name="customerNotFound" finished-at="2020-04-27T16:41:58 EDT" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
        <test-method signature="packagesFound()[pri:0, instance:packageService.GetAvailablePackagesByClub@6e0f5f7f]" started-at="2020-04-27T16:41:58 EDT" name="packagesFound" finished-at="2020-04-27T16:42:00 EDT" duration-ms="2234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- packagesFound -->
      </class> <!-- packageService.GetAvailablePackagesByClub -->
      <class name="customerInfo.GetInformationForCustomers">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerInfo.GetInformationForCustomers@c88a337]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="memberFound()[pri:0, instance:customerInfo.GetInformationForCustomers@c88a337]" started-at="2020-04-27T16:41:42 EDT" name="memberFound" finished-at="2020-04-27T16:41:43 EDT" duration-ms="846" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberFound -->
        <test-method signature="memberInCollectionsFound()[pri:0, instance:customerInfo.GetInformationForCustomers@c88a337]" started-at="2020-04-27T16:41:43 EDT" name="memberInCollectionsFound" finished-at="2020-04-27T16:41:44 EDT" duration-ms="856" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberInCollectionsFound -->
        <test-method signature="prospectFound()[pri:0, instance:customerInfo.GetInformationForCustomers@c88a337]" started-at="2020-04-27T16:41:44 EDT" name="prospectFound" finished-at="2020-04-27T16:41:45 EDT" duration-ms="918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prospectFound -->
      </class> <!-- customerInfo.GetInformationForCustomers -->
      <class name="corporateInfo.GetClubInfo">
        <test-method is-config="true" signature="getData()[pri:0, instance:corporateInfo.GetClubInfo@7c24b813]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="customPrivacyPolicy()[pri:0, instance:corporateInfo.GetClubInfo@7c24b813]" started-at="2020-04-27T16:41:26 EDT" name="customPrivacyPolicy" finished-at="2020-04-27T16:41:26 EDT" duration-ms="279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customPrivacyPolicy -->
        <test-method signature="getClub1Info()[pri:0, instance:corporateInfo.GetClubInfo@7c24b813]" started-at="2020-04-27T16:41:26 EDT" name="getClub1Info" finished-at="2020-04-27T16:41:26 EDT" duration-ms="331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getClub1Info -->
        <test-method signature="getClub2Info()[pri:0, instance:corporateInfo.GetClubInfo@7c24b813]" started-at="2020-04-27T16:41:26 EDT" name="getClub2Info" finished-at="2020-04-27T16:41:27 EDT" duration-ms="344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getClub2Info -->
        <test-method signature="inactiveClub()[pri:0, instance:corporateInfo.GetClubInfo@7c24b813]" started-at="2020-04-27T16:41:27 EDT" name="inactiveClub" finished-at="2020-04-27T16:41:27 EDT" duration-ms="314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inactiveClub -->
      </class> <!-- corporateInfo.GetClubInfo -->
      <class name="packageService.GetPackage">
        <test-method is-config="true" signature="getData()[pri:0, instance:packageService.GetPackage@37d4349f]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="servicePackageFound()[pri:0, instance:packageService.GetPackage@37d4349f]" started-at="2020-04-27T16:41:53 EDT" name="servicePackageFound" finished-at="2020-04-27T16:41:53 EDT" duration-ms="297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- servicePackageFound -->
        <test-method signature="trainingPackageFound()[pri:0, instance:packageService.GetPackage@37d4349f]" started-at="2020-04-27T16:41:53 EDT" name="trainingPackageFound" finished-at="2020-04-27T16:41:53 EDT" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trainingPackageFound -->
      </class> <!-- packageService.GetPackage -->
      <class name="customerInfo.UpdatePreferredPhoneNumber">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerInfo.UpdatePreferredPhoneNumber@593aaf41]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="preferredPhoneUpdatedHome()[pri:1, instance:customerInfo.UpdatePreferredPhoneNumber@593aaf41]" started-at="2020-04-27T16:41:48 EDT" name="preferredPhoneUpdatedHome" finished-at="2020-04-27T16:41:48 EDT" duration-ms="361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preferredPhoneUpdatedHome -->
        <test-method signature="preferredPhoneUpdatedWork()[pri:2, instance:customerInfo.UpdatePreferredPhoneNumber@593aaf41]" started-at="2020-04-27T16:41:48 EDT" name="preferredPhoneUpdatedWork" finished-at="2020-04-27T16:41:49 EDT" duration-ms="375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preferredPhoneUpdatedWork -->
        <test-method signature="preferredPhoneUpdatedMobile()[pri:3, instance:customerInfo.UpdatePreferredPhoneNumber@593aaf41]" started-at="2020-04-27T16:41:49 EDT" name="preferredPhoneUpdatedMobile" finished-at="2020-04-27T16:41:49 EDT" duration-ms="328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preferredPhoneUpdatedMobile -->
        <test-method signature="preferredPhoneNotUpdated()[pri:4, instance:customerInfo.UpdatePreferredPhoneNumber@593aaf41]" started-at="2020-04-27T16:41:49 EDT" name="preferredPhoneNotUpdated" finished-at="2020-04-27T16:41:49 EDT" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preferredPhoneNotUpdated -->
      </class> <!-- customerInfo.UpdatePreferredPhoneNumber -->
      <class name="customerInfo.GetMemberAccessibleClubs">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerInfo.GetMemberAccessibleClubs@5d0a1059]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="clubsFound()[pri:0, instance:customerInfo.GetMemberAccessibleClubs@5d0a1059]" started-at="2020-04-27T16:41:45 EDT" name="clubsFound" finished-at="2020-04-27T16:41:45 EDT" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clubsFound -->
        <test-method signature="familyMemberNotFound()[pri:0, instance:customerInfo.GetMemberAccessibleClubs@5d0a1059]" started-at="2020-04-27T16:41:45 EDT" name="familyMemberNotFound" finished-at="2020-04-27T16:41:45 EDT" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- familyMemberNotFound -->
      </class> <!-- customerInfo.GetMemberAccessibleClubs -->
      <class name="corporateInfo.GetExternalLinks">
        <test-method is-config="true" signature="getData()[pri:0, instance:corporateInfo.GetExternalLinks@7bd4937b]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getExternalLinksMultipleLinks()[pri:0, instance:corporateInfo.GetExternalLinks@7bd4937b]" started-at="2020-04-27T16:41:27 EDT" name="getExternalLinksMultipleLinks" finished-at="2020-04-27T16:41:28 EDT" duration-ms="312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getExternalLinksMultipleLinks -->
        <test-method signature="getExternalLinksSingleLink()[pri:0, instance:corporateInfo.GetExternalLinks@7bd4937b]" started-at="2020-04-27T16:41:28 EDT" name="getExternalLinksSingleLink" finished-at="2020-04-27T16:41:28 EDT" duration-ms="266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getExternalLinksSingleLink -->
      </class> <!-- corporateInfo.GetExternalLinks -->
      <class name="messagingService.SendCustomerClassEnrollmentConfirmationEmailTest">
        <test-method is-config="true" signature="getData()[pri:0, instance:messagingService.SendCustomerClassEnrollmentConfirmationEmailTest@5a56cdac]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="SendCustomerClassEnrollmentConfirmationEmail()[pri:1, instance:messagingService.SendCustomerClassEnrollmentConfirmationEmailTest@5a56cdac]" started-at="2020-04-27T16:41:49 EDT" name="SendCustomerClassEnrollmentConfirmationEmail" finished-at="2020-04-27T16:41:50 EDT" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendCustomerClassEnrollmentConfirmationEmail -->
        <test-method signature="InvalidEnrollmentId()[pri:2, instance:messagingService.SendCustomerClassEnrollmentConfirmationEmailTest@5a56cdac]" started-at="2020-04-27T16:41:50 EDT" name="InvalidEnrollmentId" finished-at="2020-04-27T16:41:50 EDT" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidEnrollmentId -->
      </class> <!-- messagingService.SendCustomerClassEnrollmentConfirmationEmailTest -->
      <class name="customerAccounting.GetOutstandingInvoices">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerAccounting.GetOutstandingInvoices@bae7dc0]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="invalidDate()[pri:0, instance:customerAccounting.GetOutstandingInvoices@bae7dc0]" started-at="2020-04-27T16:41:33 EDT" name="invalidDate" description="PBI: 153782" finished-at="2020-04-27T16:41:33 EDT" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidDate -->
        <test-method signature="outstandingInvoicesFound()[pri:0, instance:customerAccounting.GetOutstandingInvoices@bae7dc0]" started-at="2020-04-27T16:41:33 EDT" name="outstandingInvoicesFound" description="PBI: 153782" finished-at="2020-04-27T16:41:34 EDT" duration-ms="595" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- outstandingInvoicesFound -->
        <test-method signature="outstandingInvoicesNotFound()[pri:0, instance:customerAccounting.GetOutstandingInvoices@bae7dc0]" started-at="2020-04-27T16:41:34 EDT" name="outstandingInvoicesNotFound" description="PBI: 153782" finished-at="2020-04-27T16:41:34 EDT" duration-ms="174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- outstandingInvoicesNotFound -->
      </class> <!-- customerAccounting.GetOutstandingInvoices -->
      <class name="packageService.GetAvailablePackagesByClubOnlineBypass">
        <test-method is-config="true" signature="getData()[pri:0, instance:packageService.GetAvailablePackagesByClubOnlineBypass@2805d709]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="packagesFoundNoOnlineBypass()[pri:0, instance:packageService.GetAvailablePackagesByClubOnlineBypass@2805d709]" started-at="2020-04-27T16:42:00 EDT" name="packagesFoundNoOnlineBypass" description="PBI: 144305" finished-at="2020-04-27T16:42:02 EDT" duration-ms="1967" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- packagesFoundNoOnlineBypass -->
        <test-method signature="packagesFoundOnlineBypass()[pri:0, instance:packageService.GetAvailablePackagesByClubOnlineBypass@2805d709]" started-at="2020-04-27T16:42:02 EDT" name="packagesFoundOnlineBypass" description="PBI: 144305" finished-at="2020-04-27T16:42:05 EDT" duration-ms="2549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- packagesFoundOnlineBypass -->
      </class> <!-- packageService.GetAvailablePackagesByClubOnlineBypass -->
      <class name="corporateInfo.GetCompanyName">
        <test-method is-config="true" signature="getData()[pri:0, instance:corporateInfo.GetCompanyName@2c35e847]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getCompanyName()[pri:0, instance:corporateInfo.GetCompanyName@2c35e847]" started-at="2020-04-27T16:41:27 EDT" name="getCompanyName" finished-at="2020-04-27T16:41:27 EDT" duration-ms="248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCompanyName -->
      </class> <!-- corporateInfo.GetCompanyName -->
      <class name="customerInfo.UpdateCustomerName">
        <test-method signature="customerNameUpdated()[pri:1, instance:customerInfo.UpdateCustomerName@2ea41516]" started-at="2020-04-27T16:41:46 EDT" name="customerNameUpdated" finished-at="2020-04-27T16:41:47 EDT" duration-ms="451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNameUpdated -->
        <test-method is-config="true" signature="getData()[pri:0, instance:customerInfo.UpdateCustomerName@2ea41516]" started-at="2020-04-27T16:41:46 EDT" name="getData" finished-at="2020-04-27T16:41:46 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="customerNameUpdated2()[pri:2, instance:customerInfo.UpdateCustomerName@2ea41516]" started-at="2020-04-27T16:41:47 EDT" name="customerNameUpdated2" finished-at="2020-04-27T16:41:47 EDT" duration-ms="424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNameUpdated2 -->
      </class> <!-- customerInfo.UpdateCustomerName -->
      <class name="UnenrollmentService.GetUnenrollmentEligibility">
        <test-method is-config="true" signature="getData()[pri:0, instance:UnenrollmentService.GetUnenrollmentEligibility@3ee37e5a]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="GetCourseUnenrollmentEligibility_Eligible_CourseInFuture()[pri:1, instance:UnenrollmentService.GetUnenrollmentEligibility@3ee37e5a]" started-at="2020-04-27T16:42:05 EDT" name="GetCourseUnenrollmentEligibility_Eligible_CourseInFuture" finished-at="2020-04-27T16:42:05 EDT" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCourseUnenrollmentEligibility_Eligible_CourseInFuture -->
        <test-method signature="GetCourseUnenrollmentEligibility_NotEligible_WithinCannotCancelWindow()[pri:2, instance:UnenrollmentService.GetUnenrollmentEligibility@3ee37e5a]" started-at="2020-04-27T16:42:05 EDT" name="GetCourseUnenrollmentEligibility_NotEligible_WithinCannotCancelWindow" finished-at="2020-04-27T16:42:05 EDT" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCourseUnenrollmentEligibility_NotEligible_WithinCannotCancelWindow -->
        <test-method signature="GetCourseUnenrollmentEligibility_NotEligible_CourseStarted()[pri:3, instance:UnenrollmentService.GetUnenrollmentEligibility@3ee37e5a]" started-at="2020-04-27T16:42:05 EDT" name="GetCourseUnenrollmentEligibility_NotEligible_CourseStarted" finished-at="2020-04-27T16:42:05 EDT" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCourseUnenrollmentEligibility_NotEligible_CourseStarted -->
        <test-method signature="GetClassUnenrollmentEligibility_Eligible_ClassInFuture()[pri:4, instance:UnenrollmentService.GetUnenrollmentEligibility@3ee37e5a]" started-at="2020-04-27T16:42:05 EDT" name="GetClassUnenrollmentEligibility_Eligible_ClassInFuture" finished-at="2020-04-27T16:42:06 EDT" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetClassUnenrollmentEligibility_Eligible_ClassInFuture -->
        <test-method signature="GetClassUnenrollmentEligibility_NotEligible_ClassInPast()[pri:5, instance:UnenrollmentService.GetUnenrollmentEligibility@3ee37e5a]" started-at="2020-04-27T16:42:06 EDT" name="GetClassUnenrollmentEligibility_NotEligible_ClassInPast" finished-at="2020-04-27T16:42:06 EDT" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetClassUnenrollmentEligibility_NotEligible_ClassInPast -->
        <test-method signature="GetClassUnenrollmentEligibility_NotEligible_WithinCannotCancelWindow()[pri:6, instance:UnenrollmentService.GetUnenrollmentEligibility@3ee37e5a]" started-at="2020-04-27T16:42:06 EDT" name="GetClassUnenrollmentEligibility_NotEligible_WithinCannotCancelWindow" finished-at="2020-04-27T16:42:06 EDT" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetClassUnenrollmentEligibility_NotEligible_WithinCannotCancelWindow -->
        <test-method signature="GetClassUnenrollmentEligibility_InvalidEnrollmentId()[pri:7, instance:UnenrollmentService.GetUnenrollmentEligibility@3ee37e5a]" started-at="2020-04-27T16:42:06 EDT" name="GetClassUnenrollmentEligibility_InvalidEnrollmentId" finished-at="2020-04-27T16:42:06 EDT" duration-ms="186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetClassUnenrollmentEligibility_InvalidEnrollmentId -->
      </class> <!-- UnenrollmentService.GetUnenrollmentEligibility -->
      <class name="customerInfo.GetCustomerInfo">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerInfo.GetCustomerInfo@d5b810e]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="allowOnlineSearchFalse()[pri:0, instance:customerInfo.GetCustomerInfo@d5b810e]" started-at="2020-04-27T16:41:39 EDT" name="allowOnlineSearchFalse" finished-at="2020-04-27T16:41:39 EDT" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allowOnlineSearchFalse -->
        <test-method signature="allowOnlineSearchTrue()[pri:0, instance:customerInfo.GetCustomerInfo@d5b810e]" started-at="2020-04-27T16:41:39 EDT" name="allowOnlineSearchTrue" finished-at="2020-04-27T16:41:39 EDT" duration-ms="220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allowOnlineSearchTrue -->
        <test-method signature="customerFound()[pri:0, instance:customerInfo.GetCustomerInfo@d5b810e]" started-at="2020-04-27T16:41:39 EDT" name="customerFound" finished-at="2020-04-27T16:41:40 EDT" duration-ms="937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerFound -->
        <test-method signature="customerNotFound()[pri:0, instance:customerInfo.GetCustomerInfo@d5b810e]" started-at="2020-04-27T16:41:40 EDT" name="customerNotFound" finished-at="2020-04-27T16:41:40 EDT" duration-ms="233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
        <test-method signature="restrictMemberFromSearchFalse()[pri:0, instance:customerInfo.GetCustomerInfo@d5b810e]" started-at="2020-04-27T16:41:40 EDT" name="restrictMemberFromSearchFalse" finished-at="2020-04-27T16:41:41 EDT" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restrictMemberFromSearchFalse -->
        <test-method signature="restrictMemberFromSearchTrue()[pri:0, instance:customerInfo.GetCustomerInfo@d5b810e]" started-at="2020-04-27T16:41:41 EDT" name="restrictMemberFromSearchTrue" finished-at="2020-04-27T16:41:41 EDT" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restrictMemberFromSearchTrue -->
      </class> <!-- customerInfo.GetCustomerInfo -->
      <class name="corporateInfo.GetChangeRequestTermsAndConditions">
        <test-method is-config="true" signature="getData()[pri:0, instance:corporateInfo.GetChangeRequestTermsAndConditions@5d7148e2]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getChangeRequestTermsAndConditions()[pri:0, instance:corporateInfo.GetChangeRequestTermsAndConditions@5d7148e2]" started-at="2020-04-27T16:41:25 EDT" name="getChangeRequestTermsAndConditions" finished-at="2020-04-27T16:41:25 EDT" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getChangeRequestTermsAndConditions -->
      </class> <!-- corporateInfo.GetChangeRequestTermsAndConditions -->
      <class name="customerAccounting.GetInvoiceChargeReceiptDetailForReceiptNumber">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerAccounting.GetInvoiceChargeReceiptDetailForReceiptNumber@6fd83fc1]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getInvoiceChargeReceiptDetailForReceiptNumber()[pri:0, instance:customerAccounting.GetInvoiceChargeReceiptDetailForReceiptNumber@6fd83fc1]" started-at="2020-04-27T16:41:33 EDT" name="getInvoiceChargeReceiptDetailForReceiptNumber" finished-at="2020-04-27T16:41:33 EDT" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInvoiceChargeReceiptDetailForReceiptNumber -->
      </class> <!-- customerAccounting.GetInvoiceChargeReceiptDetailForReceiptNumber -->
      <class name="customerAccounting.GetAccountHistory">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerAccounting.GetAccountHistory@74751b3]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="accountHistoryFoundCharge()[pri:0, instance:customerAccounting.GetAccountHistory@74751b3]" started-at="2020-04-27T16:41:31 EDT" name="accountHistoryFoundCharge" finished-at="2020-04-27T16:41:32 EDT" duration-ms="485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountHistoryFoundCharge -->
        <test-method signature="accountHistoryFoundPayment()[pri:0, instance:customerAccounting.GetAccountHistory@74751b3]" started-at="2020-04-27T16:41:32 EDT" name="accountHistoryFoundPayment" finished-at="2020-04-27T16:41:32 EDT" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountHistoryFoundPayment -->
        <test-method signature="accountHistoryNotFound()[pri:0, instance:customerAccounting.GetAccountHistory@74751b3]" started-at="2020-04-27T16:41:32 EDT" name="accountHistoryNotFound" finished-at="2020-04-27T16:41:32 EDT" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountHistoryNotFound -->
      </class> <!-- customerAccounting.GetAccountHistory -->
      <class name="corporateInfo.GetInterestConfiguration">
        <test-method is-config="true" signature="getData()[pri:0, instance:corporateInfo.GetInterestConfiguration@5ba3f27a]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getInterestConfiguration()[pri:0, instance:corporateInfo.GetInterestConfiguration@5ba3f27a]" started-at="2020-04-27T16:41:28 EDT" name="getInterestConfiguration" finished-at="2020-04-27T16:41:29 EDT" duration-ms="373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInterestConfiguration -->
      </class> <!-- corporateInfo.GetInterestConfiguration -->
      <class name="changeRequests.UpdatePersonalInformation">
        <test-method is-config="true" signature="getData()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="mobilePhoneContactConsent()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:10 EDT" name="mobilePhoneContactConsent" finished-at="2020-04-27T16:41:10 EDT" duration-ms="628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobilePhoneContactConsent -->
        <test-method signature="updateAddress1()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:10 EDT" name="updateAddress1" finished-at="2020-04-27T16:41:11 EDT" duration-ms="592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAddress1 -->
        <test-method signature="updateAddress2()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:11 EDT" name="updateAddress2" finished-at="2020-04-27T16:41:11 EDT" duration-ms="658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAddress2 -->
        <test-method signature="updateAllowOnlineSearchFalse()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:11 EDT" name="updateAllowOnlineSearchFalse" finished-at="2020-04-27T16:41:12 EDT" duration-ms="592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAllowOnlineSearchFalse -->
        <test-method signature="updateAllowOnlineSearchTrue()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:12 EDT" name="updateAllowOnlineSearchTrue" finished-at="2020-04-27T16:41:13 EDT" duration-ms="659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAllowOnlineSearchTrue -->
        <test-method signature="updateBarcodeId()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:13 EDT" name="updateBarcodeId" finished-at="2020-04-27T16:41:13 EDT" duration-ms="613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBarcodeId -->
        <test-method signature="updateCity()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:13 EDT" name="updateCity" finished-at="2020-04-27T16:41:14 EDT" duration-ms="579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCity -->
        <test-method signature="updateEmail()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:14 EDT" name="updateEmail" finished-at="2020-04-27T16:41:15 EDT" duration-ms="593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEmail -->
        <test-method signature="updateEmailContactConsent()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:15 EDT" name="updateEmailContactConsent" finished-at="2020-04-27T16:41:15 EDT" duration-ms="642" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEmailContactConsent -->
        <test-method signature="updateFirstName()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:15 EDT" name="updateFirstName" finished-at="2020-04-27T16:41:16 EDT" duration-ms="703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateFirstName -->
        <test-method signature="updateHomePhone()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:16 EDT" name="updateHomePhone" finished-at="2020-04-27T16:41:17 EDT" duration-ms="611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateHomePhone -->
        <test-method signature="updateHomePhoneContactConsent()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:17 EDT" name="updateHomePhoneContactConsent" finished-at="2020-04-27T16:41:17 EDT" duration-ms="564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateHomePhoneContactConsent -->
        <test-method signature="updateLastName()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:17 EDT" name="updateLastName" finished-at="2020-04-27T16:41:18 EDT" duration-ms="581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateLastName -->
        <test-method signature="updateMobilePhone()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:18 EDT" name="updateMobilePhone" finished-at="2020-04-27T16:41:18 EDT" duration-ms="595" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateMobilePhone -->
        <test-method signature="updatePreferredPhone()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:18 EDT" name="updatePreferredPhone" finished-at="2020-04-27T16:41:19 EDT" duration-ms="655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePreferredPhone -->
        <test-method signature="updateRestrictMemberFromMultiMemberSearchFalse()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:19 EDT" name="updateRestrictMemberFromMultiMemberSearchFalse" finished-at="2020-04-27T16:41:20 EDT" duration-ms="625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateRestrictMemberFromMultiMemberSearchFalse -->
        <test-method signature="updateRestrictMemberFromMultiMemberSearchTrue()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:20 EDT" name="updateRestrictMemberFromMultiMemberSearchTrue" finished-at="2020-04-27T16:41:20 EDT" duration-ms="596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateRestrictMemberFromMultiMemberSearchTrue -->
        <test-method signature="updateRestrictMemberFromSearch()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:20 EDT" name="updateRestrictMemberFromSearch" finished-at="2020-04-27T16:41:21 EDT" duration-ms="594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateRestrictMemberFromSearch -->
        <test-method signature="updateState()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:21 EDT" name="updateState" finished-at="2020-04-27T16:41:21 EDT" duration-ms="579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateState -->
        <test-method signature="updateWorkPhone()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:21 EDT" name="updateWorkPhone" finished-at="2020-04-27T16:41:22 EDT" duration-ms="578" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateWorkPhone -->
        <test-method signature="updateZipCode()[pri:0, instance:changeRequests.UpdatePersonalInformation@618425b5]" started-at="2020-04-27T16:41:22 EDT" name="updateZipCode" finished-at="2020-04-27T16:41:23 EDT" duration-ms="702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateZipCode -->
      </class> <!-- changeRequests.UpdatePersonalInformation -->
      <class name="customerAuth.AuthorizeCustomerTest">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerAuth.AuthorizeCustomerTest@2ed2d9cb]" started-at="2020-04-27T16:41:00 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="1078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="AuthorizeCustomer_AllPermissions()[pri:1, instance:customerAuth.AuthorizeCustomerTest@2ed2d9cb]" started-at="2020-04-27T16:41:37 EDT" name="AuthorizeCustomer_AllPermissions" finished-at="2020-04-27T16:41:37 EDT" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AuthorizeCustomer_AllPermissions -->
        <test-method signature="AuthorizeCustomer_CannotCclasses()[pri:2, instance:customerAuth.AuthorizeCustomerTest@2ed2d9cb]" started-at="2020-04-27T16:41:37 EDT" name="AuthorizeCustomer_CannotCclasses" finished-at="2020-04-27T16:41:37 EDT" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AuthorizeCustomer_CannotCclasses -->
        <test-method signature="AuthorizeCustomer_CantnrollClass()[pri:3, instance:customerAuth.AuthorizeCustomerTest@2ed2d9cb]" started-at="2020-04-27T16:41:37 EDT" name="AuthorizeCustomer_CantnrollClass" finished-at="2020-04-27T16:41:38 EDT" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AuthorizeCustomer_CantnrollClass -->
        <test-method signature="AuthorizeCustomer_CantCcourses()[pri:4, instance:customerAuth.AuthorizeCustomerTest@2ed2d9cb]" started-at="2020-04-27T16:41:38 EDT" name="AuthorizeCustomer_CantCcourses" finished-at="2020-04-27T16:41:38 EDT" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AuthorizeCustomer_CantCcourses -->
        <test-method signature="AuthorizeCustomer_CantnrollCourse()[pri:5, instance:customerAuth.AuthorizeCustomerTest@2ed2d9cb]" started-at="2020-04-27T16:41:38 EDT" name="AuthorizeCustomer_CantnrollCourse" finished-at="2020-04-27T16:41:38 EDT" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AuthorizeCustomer_CantnrollCourse -->
        <test-method signature="AuthorizeCustomer_NotCollectionsMember_PayOnlineAllowed()[pri:6, instance:customerAuth.AuthorizeCustomerTest@2ed2d9cb]" started-at="2020-04-27T16:41:38 EDT" name="AuthorizeCustomer_NotCollectionsMember_PayOnlineAllowed" finished-at="2020-04-27T16:41:38 EDT" duration-ms="218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AuthorizeCustomer_NotCollectionsMember_PayOnlineAllowed -->
        <test-method signature="AuthorizeCustomer_NotCollectionsMember_PayOnlineNotAllowed()[pri:7, instance:customerAuth.AuthorizeCustomerTest@2ed2d9cb]" started-at="2020-04-27T16:41:38 EDT" name="AuthorizeCustomer_NotCollectionsMember_PayOnlineNotAllowed" finished-at="2020-04-27T16:41:38 EDT" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AuthorizeCustomer_NotCollectionsMember_PayOnlineNotAllowed -->
        <test-method signature="AuthorizeCustomer_CollectionsMember_PayOnlineNotAllowed()[pri:8, instance:customerAuth.AuthorizeCustomerTest@2ed2d9cb]" started-at="2020-04-27T16:41:38 EDT" name="AuthorizeCustomer_CollectionsMember_PayOnlineNotAllowed" finished-at="2020-04-27T16:41:39 EDT" duration-ms="186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AuthorizeCustomer_CollectionsMember_PayOnlineNotAllowed -->
        <test-method signature="AuthorizeCustomer_CollectionsMember_PayOnlineAllowed()[pri:9, instance:customerAuth.AuthorizeCustomerTest@2ed2d9cb]" started-at="2020-04-27T16:41:39 EDT" name="AuthorizeCustomer_CollectionsMember_PayOnlineAllowed" finished-at="2020-04-27T16:41:39 EDT" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AuthorizeCustomer_CollectionsMember_PayOnlineAllowed -->
      </class> <!-- customerAuth.AuthorizeCustomerTest -->
      <class name="customerInfo.UpdateCustomerInterests">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerInfo.UpdateCustomerInterests@1de76cc7]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="interestAdded()[pri:0, instance:customerInfo.UpdateCustomerInterests@1de76cc7]" started-at="2020-04-27T16:41:46 EDT" name="interestAdded" finished-at="2020-04-27T16:41:46 EDT" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- interestAdded -->
        <test-method signature="interestRemoved()[pri:0, instance:customerInfo.UpdateCustomerInterests@1de76cc7]" started-at="2020-04-27T16:41:46 EDT" name="interestRemoved" finished-at="2020-04-27T16:41:46 EDT" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- interestRemoved -->
      </class> <!-- customerInfo.UpdateCustomerInterests -->
      <class name="corporateInfo.GetRequiredFields">
        <test-method is-config="true" signature="getData()[pri:0, instance:corporateInfo.GetRequiredFields@58d75e99]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="getRequiredFields()[pri:0, instance:corporateInfo.GetRequiredFields@58d75e99]" started-at="2020-04-27T16:41:29 EDT" name="getRequiredFields" finished-at="2020-04-27T16:41:31 EDT" duration-ms="2563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequiredFields -->
      </class> <!-- corporateInfo.GetRequiredFields -->
      <class name="customerAccounting.GetCustomerAccountValue">
        <test-method is-config="true" signature="getData()[pri:0, instance:customerAccounting.GetCustomerAccountValue@741a8937]" started-at="2020-04-27T16:41:01 EDT" name="getData" finished-at="2020-04-27T16:41:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="customerNotFound()[pri:0, instance:customerAccounting.GetCustomerAccountValue@741a8937]" started-at="2020-04-27T16:41:32 EDT" name="customerNotFound" finished-at="2020-04-27T16:41:32 EDT" duration-ms="157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
        <test-method signature="getCustomerAccountValue()[pri:0, instance:customerAccounting.GetCustomerAccountValue@741a8937]" started-at="2020-04-27T16:41:32 EDT" name="getCustomerAccountValue" finished-at="2020-04-27T16:41:32 EDT" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCustomerAccountValue -->
      </class> <!-- customerAccounting.GetCustomerAccountValue -->
    </test> <!-- Full Suite -->
  </suite> <!-- CORE Web Services - Continuous Integration -->
</testng-results>
